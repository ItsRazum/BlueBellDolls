// <auto-generated />
using System;
using BlueBellDolls.Common.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlueBellDolls.Common.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("BlueBellDolls.Common.Models.Kitten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMale")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LitterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LitterId");

                    b.ToTable("Kittens");
                });

            modelBuilder.Entity("BlueBellDolls.Common.Models.Litter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FatherCatId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<char>("Letter")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MotherCatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentCatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FatherCatId");

                    b.HasIndex("MotherCatId");

                    b.HasIndex("ParentCatId");

                    b.ToTable("Litters");
                });

            modelBuilder.Entity("BlueBellDolls.Common.Models.ParentCat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneticTestOne")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneticTestTwo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMale")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OldDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("BlueBellDolls.Common.Models.Kitten", b =>
                {
                    b.HasOne("BlueBellDolls.Common.Models.Litter", "Litter")
                        .WithMany("Kittens")
                        .HasForeignKey("LitterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Litter");
                });

            modelBuilder.Entity("BlueBellDolls.Common.Models.Litter", b =>
                {
                    b.HasOne("BlueBellDolls.Common.Models.ParentCat", "FatherCat")
                        .WithMany()
                        .HasForeignKey("FatherCatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BlueBellDolls.Common.Models.ParentCat", "MotherCat")
                        .WithMany()
                        .HasForeignKey("MotherCatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BlueBellDolls.Common.Models.ParentCat", null)
                        .WithMany("Litters")
                        .HasForeignKey("ParentCatId");

                    b.Navigation("FatherCat");

                    b.Navigation("MotherCat");
                });

            modelBuilder.Entity("BlueBellDolls.Common.Models.Litter", b =>
                {
                    b.Navigation("Kittens");
                });

            modelBuilder.Entity("BlueBellDolls.Common.Models.ParentCat", b =>
                {
                    b.Navigation("Litters");
                });
#pragma warning restore 612, 618
        }
    }
}
